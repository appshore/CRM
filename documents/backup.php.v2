<?php
 /***************************************************************************
 * Appshore                                                                 *
 * http://www.appshore.com                                                  *
 * This file written by Brice Michel  bmichel@appshore.com                  *
 * Copyright (C) 2004-2010 Brice Michel                                     *
 ***************************************************************************/


class documents_backup
{

	var $backupDate;
	
	function __construct()
	{
		$this->backupDate = gmdate('Ymd');
	
	}

 	// Open the Customer Database
	function setDatabase()
	{
 echo __FUNCTION__.RET;
		include_once(APPSHORE_INCLUDES.SEP.'adodb'.SEP.'adodb-exceptions.inc.php'); 
		include_once(APPSHORE_INCLUDES.SEP.'adodb'.SEP.'adodb.inc.php');
		
		// connect to specific database
		$GLOBALS['appshore']->db = ADONewConnection($GLOBALS['appshore_data']['server']['db_type']);
		if ( !$GLOBALS['appshore']->db->Connect($GLOBALS['appshore_data']['server']['db_host'],$GLOBALS['appshore_data']['server']['db_user'],$GLOBALS['appshore_data']['server']['db_pass'],$GLOBALS['appshore_data']['server']['db_name']) )
		{
			// can not connect with the customer db so we go to the generic one
			// and we'll ask for more info
			echo 'Can\'t access database.<br>';
			echo 'Please contact your System Administrator';
			exit;		
		}
		
		// set the ADODB fetch mode
		$GLOBALS['appshore']->db->SetFetchMode(ADODB_FETCH_ASSOC);
		$ADODB_COUNTRECS = true;

		executeSQL( 'SET CHARACTER SET "utf8"');		
	}


	// make sure that the have big enough and clean data space
    function prepareDataSpace( $args=null)
    {
 echo __FUNCTION__.RET;
 
		if( is_dir(APPSHORE_DOCUMENTS_BACKUP.SEP.$this->backupDate) == false )
		{
        	createFoldersTree( APPSHORE_DOCUMENTS_BACKUP.SEP.$this->backupDate);
        	echo 'Documents backup space created.'.RET;
        }
        else
        {
        	echo 'Documents backup space already created. Delete it first for a clean backup'.RET;
        }
    } 

	// create the folders tree according on the one defined in the database
    function createFolders2( $args=null)
    {
 echo __FUNCTION__.RET;
 $cnt = 1;

		// folders list from home
 		$db = executeSQL( 'SELECT document_id, created, updated FROM documents where is_folder ="Y" order by document_name');	
		while( !$db->EOF )
		{
			$folder = $db->GetRowAssoc(false);
			$dst = APPSHORE_DOCUMENTS_BACKUP.SEP.$this->backupDate.SEP.$this->getTree( $folder['document_id']);
//			createFoldersTree($dst);    	
//			touch( $dst, strtotime($folder['created']), strtotime($folder['updated']));
			$db->MoveNext();
echo $dst.RET;
		}
    }  

    function createFolders( $folder_id = 0, $path='')
	    {
		// folders list from home
		$folders = getManyAssocArrays( 'SELECT document_id, document_name, created, updated FROM documents where is_folder ="Y" and folder_id = "'.$folder_id.'"');
						        
	    if( $folders == null )
	        return;

	    foreach( $folders as $key => $folder)
	    	{
	            // remove non alphanumeric
	            $folder['document_name'] = preg_replace('/[^\da-z]/i', ' ', $folder['document_name']);
	           // remove excess white space
	            $folder['document_name'] = preg_replace('/\s\s+/', ' ', $folder['document_name']);
	            $folder['document_name'] = trim($folder['document_name']);

	            $dst = APPSHORE_DOCUMENTS_BACKUP.SEP.$this->backupDate.SEP.$path.SEP.$folder['document_name'];
	            createFoldersTree( $dst);
																					            
	            touch( $dst, strtotime($folder['created']), strtotime($folder['updated']));
				$this->createFolders( $folder['document_id'], $path.SEP.$folder['document_name']);
				$nbrdirs++;
			}
	    }  

	// list all documents, extract them from their current location, rename them according the original name.
    function extractDocuments( $args=null)
    {
		// folders list from home 
 		$db = executeSQL( 'SELECT document_id, created, updated FROM documents where is_folder ="N"');	
		while( !$db->EOF )
		{
			$document = $db->GetRowAssoc(false);
			if( file_exists(APPSHORE_DOCUMENTS.SEP.$document['document_id']) )
			{
				$dst = APPSHORE_DOCUMENTS_BACKUP.SEP.$this->backupDate.SEP.$this->getTree( $document['document_id']);
				copy( APPSHORE_DOCUMENTS.SEP.$document['document_id'], $dst);
				touch( $dst, strtotime($document['created']), strtotime($document['updated']));
				$nbrdocs++;
			}
			$db->MoveNext();
		}

    } 
    
	// build a tree of ancestors for a file or a folder
	function getTree( $document_id = '0')
	{
		$document = getOneAssocArray( 'SELECT document_name, document_id, folder_id FROM documents WHERE document_id = "'.$document_id.'"');  		

		if( $document == null )
			return '';
	    
		// remove excess white space
		$document['document_name'] = preg_replace('/\s\s+/', ' ', $document['document_name']);
		$document['document_name'] = trim($document['document_name']);
		if( $document['folder_id'] == '0' )
			return $document['document_name'];
		else
			return $this->getTree($document['folder_id']).SEP.$document['document_name'];
	}        
    	
}

chdir('..');           
define('SEP', '/');
define('RET', '<br/>');

$GLOBALS['distrib_dir'] = getcwd();
$GLOBALS['config_dir'] = $GLOBALS['distrib_dir'].SEP.'config';
$subdomain = '';
list( $subdomain, $domain, $tld) = explode( '.', $_SERVER['SERVER_NAME'] );

// return server context
if ( $_GET['alias'] != $subdomain )
{
	echo '?'.RET;	
	exit();
}

if( !isset($tld) )
	header('Location: http://www.'.$subdomain.'.'.$domain);

if(isset($subdomain) && isset($domain) && file_exists($GLOBALS['config_dir'].SEP.$subdomain.'.'.$domain.'.'.$tld.'.cfg.php') )
{
	$GLOBALS['config_file'] = $GLOBALS['config_dir'].SEP.$subdomain.'.'.$domain.'.'.$tld.'.cfg.php';	
}
else if(isset($subdomain) && isset($domain) && file_exists($GLOBALS['config_dir'].SEP.$domain.'.'.$tld.'.cfg.php') )
{
	$GLOBALS['config_file'] = $GLOBALS['config_dir'].SEP.$domain.'.'.$tld.'.cfg.php';	
}
else
{
	echo '<br/><br/>Invalid domain name<br/><br/>';
	echo 'Please contact your administrator';
	exit();
}

include_once($GLOBALS['config_file']);	
include_once(APPSHORE_API.SEP.'core_functions.inc.php');
include_once(APPSHORE_LIB.SEP.'lib.inc.php');
include_once(APPSHORE_LIB.SEP.'lib.files.php');
include_once(APPSHORE_LIB.SEP.'lib.folders.php');

define('APPSHORE_DOCUMENTS_BACKUP', APPSHORE_STORAGE.SEP.'documents_backup');


// set database access
$nbrdocs = $nbrdirs = 0;
$backup = new documents_backup;
$backup->setDatabase();
$backup->prepareDataSpace();
echo 'Create Folders';
$backup->createFolders();
echo 'Folders = '.$nbrdirs;
echo 'Extract Documents';
$backup->extractDocuments();
echo 'Documents = '.$nbrdocs;

